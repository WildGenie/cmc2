<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="DataSet1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="colSAM.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colDisplay.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colMail.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colDN.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="groupContextMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>266, 17</value>
  </metadata>
  <metadata name="srName.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="srDescription.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="userContextMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>118, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAMDAAAAEACACoDgAANgAAACAgAAABAAgAqAgAAN4OAAAQEAAAAQAIAGgFAACGFwAAKAAAADAA
        AABgAAAAAQAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADKhbgAxn20AMJRnACAfIwAgJx8AKymAACsq
        fgApKHEAIyI0ABYVGwAjHzQAIRwrACEeJgAgHiIAIB4gACQjJAAgHB8AIBweACAYGgAvKSIA5LBSAI55
        VgDalQ4A3JoTALiCFgC4hBsA258sAN+jMACFYx4A4ac6ANujOADcp0AA4apDANyqSADgrU0A3bBXAN+y
        WgBHOR8APzUiAN+ZCQDgnhEA46AVANeZFgDcnRoA1podANygIwDWnCIA154mAN2jKQDXnykA16ArANeh
        LgDXozIA2KQ0AHVYHADYpDYA2KU5ANimPADYpz8A2KhCANmpRADZqkUA2atHANmrSADZrEoA2a1NANmu
        TgDZrk8A2a9SANqwUwDasFYA2rJZAOC3YADas10A2rReANq1YQDatWIA27dlANu3ZgDbt2cAsoouANq2
        YgAfHhoAuKxvACAnIQAuhFoAMaFuADGdbAAyoG4AMJdpADCTZwAvjWMALohgAC6HYAAsh2AAISgmACIu
        LABgq6kAISgoACEmJgBTsbwAIzM1AFG1xQAUzP8AKNL/ADPS/wA61f8APNX/AEDY/wBA1/8AJc3/AC7P
        /wA3z/8AOtL/AD3S/wBB0v8ARdL/AFbV/wBe1/8AZtn/AILg/wAlxPwAKMH3ACm36AAuw/YAKJa7ACSE
        pwBBz/8ASdH/AE3S/wBQ0/8AU9T/AFTU/wBY1f8AWtX/AGHX/wBk2P8Aatn/AG3a/wBx2/8Ac9z/AHbc
        /wB53f8Afd7/AIDf/wCF4P8AieH/AI3i/wCQ4/8Ak+T/AJbk/wCa5f8Aneb/AKHn/wAkYXkAIjhBACI3
        QAAgJysANJnaACEoLgBYluAAXJrmAF+g6wBfn+kAXpznAFSO3QBbmOgAV5PeAFuW5QBcl+UAWZDjAFqT
        5ABRjeoAVozkAFeN4gBYj+MAUIPaAFWL5gBWiuEAVYfgAFaBygA5asoAU4PgAFOB3gBUhN8AISIkAFF+
        3QBQe9wAR3flAE522gBPedsAS3DZAExy2QBKbdgAS2/YAEttzwBPcNYAUXTaAFFz1wAgISQASGnXAEdm
        1QBNbNUAPF3cAEVg1ABGY9UAS2bTABUYJABCWtIAQ1zSAERe0wA1TdcAQFXQAEFX0QBCWdIAQlnRAElf
        0QA9Ts4AOkvDAD9SzwA+T84AQFTPAERW0AAxQ9UAPEvNADtJzAA9Tc4APUzNAD9NzQA5RMsANkPCADpG
        ywAlKEcAGRokAC042QA4QNIAOULTADI7uAA4QsoANz/JAB0hZQA2OtAANDnHADc90gA4P9IANjvJADQ2
        1QA0N88AMjO/ACcoYQAmJ1gAHR0jACAgIwAjIyUAJCQkAAAAAAD/V1YAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABWV/9XV1tdXFxcXFxcXFxcXl5eXl5eXl5eXl5eXl5eXl5eXl5e
        Xl1cXFxcXFxcXFxbV1cBWWADx8fHx8fHufwDD/7+/v7+Dw8PDw8PDw8PDw/+/v7+/vvPx8fHx8fHx/xj
        WwABAmMQDQ0NDQ0N+xMcGBgYGBgYGRkZGRkZGRkZGRkZGBgYGBg26Q0NDQ0NDQ0DXQABAmINAwMDAwMD
        zzYpFysrLS0tMDAwMDAwMDAwMDAtLS0rKygXJukDAwMDAw3HXAABAmINAwMDAwMDzxwoLC4vMjM0NTc3
        ODg4ODg4NzU0MzIvLioqJekDAwMDAw3HXAABAmINAwMDAwMDzxwoLi8zNDg5Ojs8PD09PT08PDo6ODUz
        LywqJekDAwMDAw3HXAABAmINAwMDAwMDzxwoLjI0ODo8PkBBQkNDQ0NBQUA9Ozk1Mi4qJekDAwMDAw3H
        XAABAmINUlJSUlJSCRwrLzM3Oj1AQURFRkZHRkZGRUNBPjs4My4qJekDAwMDAw3HXAABAl8D+vn5+fn5
        8BwpMTQ4Oz9BREZHSUlKSklJR0ZEQDw5NC8qJekDAwMDAw3HXAABAgQH9vf38fHx6hUoMTU5PUBERkdK
        S0xRUUtLSUdGQz46NS8qJekDAwMDAw3HXAABAgQF9/Lv7uXn3xUXMTU6PkFFR0pLUU1OTU1RS0lGRD87
        Ny8qJekDAwMDAw3HXAABAgQG8e/l4eDc0xUoMjc6P0NGR0pMTU9PT05NS0pHREA7Ny8qJekDAwMDAw3H
        XAABAgQG8e7h2dvX0xUoMjc6P0NGSUpMTU9PT09NTEpHREA7Ny8qJekDAwMDAw3HXAABAgQG8+Xg29XS
        yxUoMjU6PkJGR0pLTU5PT05RS0lHREA7Ny8qJekDAwMDAw3HXAABAgQG8+fc1NHNyxUoMTU6PkFFR0lL
        UU1NSCQjIyMiIR8eGisWJQkSEhISEhLHXAABAgQG8+Hb1szIyxUoMTQ5PEBDRkdJSktIU2RmZmZmZmZm
        ZGRkfX19fX19fZoOXAABAgQG9OHd0c3JvBUoMTQ4Oz5BREZHR0kUYWdub29pcHFxcXFxbWxramlpaHpl
        VQABAgQG6+DU0snBvBUoLzM3Ojw/QUNERUYiYW5wf4CBg3WFhYWFdYSCgHRwb3qbVQABAgQG6+DUzMi/
        vBUoLjI0ODo7PT9AQUEgYW5/gXV2iHeJiYqJd4h2hYJ0cHqcVQABAgQG6+PVzcjAvBUnLjEzNDg5Ojs7
        PD0dYW90hHZ3ioyNjo6OjYuJh4WAcXycVQABAgQG6+LXzcG+vBUnLC4xMzM0Nzg4OTkaYW+AhXeLjo94
        kZF4kI6MiXaCcnycVQABAgQG7OLWzcG9vBUnKiwuLy8xMjIzMzMtYWmBdoqNkJKTk5OTkniOi4iDc3yc
        VQABAgQG7NnQycK+vBUnJxcXFxcrKysrKysoYW+Ch4uPkZOVlpaVlJKQjXd1c3ycVQABAgQG7NnQycK+
        trQVUFBQUFBQUFBQUFAZYWmDiIyQk5WXmJeXlpN4jomFdHycVQABAgQG7NnQycK+t7GspaegoKCgp6Wl
        sL7DnmuDd414k5aXmZmYl5SRjomFdHycVQABAgQG7NnQycK+trKqpqSjoqKjpKarrbbFnmuEd42RlJeZ
        mZmZmJWSj4qGdHycVQABAgQG7NnQycK+t7KqqKGko6OkoairsrbGnmuEd42RlJeYmZmZmJWSj4qGdHyc
        VQABAgQG7NnQycG+t7KqqKGkpKSkoaiqsrbGnmuEd42RlJeZmZmZl5WSj4qGdHycVQABAgQG7NnQycK9
        t7Ouq6mhpKShqauvs7fEnmuEd414k5aXmZmYl5SRjomGdHycVQABAgQG7OLWzcG9urOuq6ipoaGhqKuu
        s7rEnmqDiIyQk5WXmJiXlpORjomFdHycVQABAgQG6+LXzcG9uriyr6uoqKioq6quuLrEnmqCh4uPkZSV
        lpaWlJKQjXd1dHycVQABAgQG6+PVzcjAu7ezrq+qq6urqq6zt7vKnnGBdoqNkJKTlJSTk5GPi4iEc3yc
        VQABAgQG6+DVzMi/vrq2sq6ur6+urrK4ur7KnmqBhomLjpCRkpKReI+NioeCc3ycVQABAgQG6+DU0snB
        vb63uLOysrKys7i3u73OnmmAdYiKi46Pj4+Pjo2Kd4aBcnycVQABAgQG9OHd0c3Iv727ure2uLi2t7q7
        vcDOnm9/goaHd4qLi4uLiomIdoSAcXqcVQABAgQG8+Hb0MzJwcC9vru6urq6u769wMHYnm9/gIKFdoeI
        iIiIh3aGhIF/cHqcVQABAgQG8+fc1dHNyMG/wL29vr69vcDAwcjenmhwf4CBgoOEdXV1g4KBgH9wb3qb
        VQABAgQG8+Xj1NfSzcnIwcHCwsLCwcHIyc3enm5uaXBxcnJzc3Nzc3JycWlvaHmcVQABAgQG8e7h3NTX
        0czNycnJycnJycnNzNLetXt7e3t7e3t7e3t7e3t7e3t7e378XQABAgQG8e/n4Nzd1dfR0dLSzMzM0tLR
        19XU5Nra5u3onZ+fn5+fn5+fn5+fnxH8XAABAgQG9/Xu5+Hj3Nvb3dTU1NTU1N3b29zi4efv9fgKUhAQ
        EBAQEBAQEBAQEA3HXAABAgQF9/L17+7l5+Hh4eDg4ODg4ODh4efl7u/18vgIDgMDAwMDAwMDAwMDAw3H
        XAABAgQH9vf38fHz8/Pz9Ovr6+vr6/T08/Pz8fH39vgIDgMDAwMDAwMDAwMDAw3HXAABWlQLBwUGBgYG
        BgYGBgYGBgYGBgYGBgYGBgYFBegRDQ0NDQ0NDQ0NDQ0NDRANXQABWWVjBAQEBAQEBAQEBAQEBAQEBAQE
        BAQEBAQEBFRiYmJiYmJiYmJiYmJiYmNgW1hXV1kCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgJZV1f/VwEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        V/+AAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAgAAAAAABAAAoAAAAIAAAAEAAAAABAAgAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAMqNvADKgbgAlSTUAMy64AC4qkQAtKpEALiuSAC0nlQAtKJEAKSN1ACUaTgAgHyMAGRQgAHdy
        fgAiGCoAc2V8AB8XHwAfGB8AHxcdAB4QGgAdFhkAHw8TACAXGAAfFRYAHx0dAGhTUQA6Kx0AwIIRAL2C
        FgC9gxkAvYQbAN+XBgDong0AsHgQAOmkGABmTBsA4qtCAOOwTQDjtFgA5LZfAN2bDwDenhMA4J8XALKA
        FQDcnh0A4KIeAKt8GADeoiQA154mAOGmKQDdpSwA16AsAN+mMQDXojAA2KMyAN+oNQDYpDYA2KU5ANin
        PgDYqEAA2KhBANipQwDZq0gA2axKANmtTADZrk8A2a9RANqvUwDasFUA2rFXANqzXQDatF8A3bZhANu3
        ZwDatmIA27dkAMiuZgC/nTQAl4tjAMGxbwC3plcAHx4ZAI2FQgCyrnAAhYd5AH6EcQArRDUAJUk0ACtF
        NgAlRDMAJUk2ACZJNgAxm2cAMaBtADKibwAxnWsAMqBtAC+ebgAxom8AMqNwADKhbwAoQzcAKWZMAChd
        RwAmSjsAJUI2ACZKPAAkQDUAJUU5ACRBNgAkPDMAHz43ACZKRAAlVVAAJVRPACVTTwAmUk4ALtj/ADDZ
        /wA92f8ARdv/ACjH9AAvsdcAOcr0ADzU/wA4xesAMsj0ADXR/wBG0/8AStX/AEzV/wBR1v8AU9f/AFTY
        /wBW1v8AWNn/AFvZ/wCC4P8AhuH/AJLk/wCV5f8AKMD3ACy77wAxwvMAMbzvACaNsgA0ve8AN8T0ACeK
        rQAoiq0ATdL/AFvW/wBi1/8AZtj/AGrZ/wBu2v8Acdv/AHLb/wBz3P8Addz/AHbc/wB73f8Afd7/AIDf
        /wCE4P8AieH/AJDj/wCa5f8Anub/AKHn/wAjaIYAHzxKACE9SwArmeEAL4vZAF6e6ABdm+YAVZvzAFyX
        5gBdmecAWZHkAFqU5QBak+QAUZDwAFeN4gBYjuMAP3rfAEZ61QBUhuAAVonhAFaE1ABDc9MAU4HeAFSE
        4AATFRkAQW7RAFB83QBQe9wAVYLgAEZ26QBNddoAT3ncAFJ53ABUfd4AQGfOAEtx2QBQddsAS2/YAEps
        1wBNcdkAPWHjAEdn1gBHZdUASWnWAENe0gBFYdQARWHTAExp1wBDXdIARF7UAERc0gBDW9EASGHVABQX
        JAAeHyQANU7bAEJZ0gBCWdEAQVfQAEFY0ABBVs8ARFvTACEkNAB7fIIAPU7NAD9TzgBAU88APEvXAD1M
        1wA7SswAPErMADtH1QA6RdQAPEnWADxI1QA0PN4AN0DTADhB0wA5QtQAOkTJADc90gA2N8YAKSuFAB0d
        IwAeHiMAAAAAAP9dAQEBAQEBYWFhYWFhYWFhYWFhYWFhYQEBAQEBYF1fXmZubW1taW9vWFhWVlZWVlZW
        VlZWVlZlb21tbW1uZwFjbBMREREMGiEbHBwdHR0eHh4eHR0cHBsjDBARERNuAQBqEAsLC98jIiwvMjI0
        NDc3Nzc0MjIvIivg/QsLEW0BAGoQCwsL3yMqMDU5Oz0+Pj4+Pj06OTUtLuD9CwsRbQEAahZRUVHCIy0z
        OT0/QUNERERDQT89OC8u/v0LCxFtAWNbCvz8/PwZKjU6PkJFRkdHR0ZFQj45MS7+/QsLEW0BAAIH9fr4
        9Q8pNjxAREZKS0tLSkZFPzoxLv79CwsRbQEAAgj6+erhDyk2PUBFRkpJSUlLR0VAOjEu/v0LCxFtAQAC
        CPjq7NINKTY8QEVGSklJJycmJSQ3IiEUFBYWE20BAAIF8uvc0g0pNjtAQ0ZHSkhPU1NTU1BQUqurrKvo
        awEAAgXx5tfS6Sg1Oj5BREYmTHp5fn57e3t7e3t+eXpwXwACBfPl18fpKDM5PD5AQSVTeX+Ag4aIiIiI
        hIF8jXFcAAIF893Vx+koMDU5Oj09JFB9gJeZnJ+gn5yZl4COc1wAAgXt2tXH6R8wMDM2ODg0UH2BmZ+j
        iqWKo56YgpBzXAACBu7a0MfpHx8oKCkpKSBNfYOboqWLjIulopqDkHNcAAIG7trQxL5UTk5OTk5OTlV9
        hZyki6eop6aJm4SSc1wAAgbu1tDFvbexsbGxsbfHupOHnoqMqKmojKSchpJzXAACBu7a0MW9trOvr6+y
        tMa7k4eeioypqamMpJyGknNcAAIE7drQyby0srCwsLK5wLuTh52KjKioqIyknIaSc1wAAgTt2tXJwbm1
        srOytrjLu5OHnImmp6inpqObhJJzXAACBfPd08jAvbm2tba5vMq7k4SaoqWmi6aloZqDkHNcAAIF8+PT
        zcTBvbi5uL3Azr+PgpmeoqSKpKKcmIKQc1wAAgXx5tfQyMTAvLy8wMTRv4+Bl5mbnp+em5mGgI5zXAAC
        BfLs29XPyMnExMTJyNnDj3yWhpeYmJiXhpZ8jnJcAAII+Ori19PQz83Nzc/Q3syNdXx3eHh4eHh3d3aN
        dFwAAgj37+zj29jU1NTU1Nfn5q6trpGUlJWVlZSUkappYAACCPr58Ors5uTl5eXk5uvq+fsDDhcXFxcX
        FhYWFWsBAFcH9fr2+PHx8/Pz8/Tx8vj2+vvoGAsLCwsLCwsRbQFjWQoHCAgIBQUFBQUFBQUICAgHCRAS
        EBAQEBAQEBNuYGRmWQICAgICAgICAgICAgICAlpXaGpqampqampqbGZg/2JjAAAAAAAAAAAAAAAAAAAA
        AABjAAAAAAAAAABjYv+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAgAAAASgAAAAQAAAAIAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAxL60AMjGvADMyqQAyLasAKyaDAC4glgArH4QAUkqBABUQHwAYEh4AEQoVAB8XHgAfDhwAHhAaAB4P
        GQAfFxoAHgcPAB4NEgAeDBEAHQ0OADkoGwBWPBkAakcPAL+CEwDKihUAxIogAMSKIwDEiyUAxIwlAMSM
        JgDmq0AA5rNXAEY2GwDmnRMAxYodAO2oJgBrUR0AaE8dAOStRwDitFoA4rhjANmWCwDcnBcA2ZwaANue
        HwDfoSEA2Z8hANmfIwDZoCMA6KsoAOOrMQDapjgA36o6AN2sQgDaq0MA3q5HANqrRQDZq0YA2qxHAN+w
        TADfsU4A37FQANquUADasFYA2rFXANqyXADatF4A27VhANu2YwDat2cAp7aGAH2zkgA0c04ANHJOADJy
        TwAwcVAAK3NSACxzUgArcVEAK3BQACttTwAvj2QAL45jAC+OZAAvjGIAK3NTACtyUwAsc1MALHNUACtw
        UgAqbVAAK25QACttUAAqa04AKmtPACtrTwApbVEAK3FTACtvUwB9uqIAK3JXACl8ZAAqfWUAK3tkAHK4
        qgB3u64AbLy4AEqVmQA53f8AWOT/ADDV/wBG3f8ATdv/AFHc/wBS3P8AY+H/AFHZ/wBT2/8AVtn/AF3c
        /wBe3v8AX97/AGPe/wB24P8AIlVlAGfc/wBx3v8Ae+H/AHzh/wCa5v8ALsDxADTF+AAmgJ8AO73tAD++
        7ABBvuwAQr7sAEO+7AAjV2oAI1VnAHTc/wB73v8Af9//AIPg/wCI4f8Ai+L/AI/j/wCQ4/8AkeP/AJLj
        /wCY5f8AnOb/AKHn/wCj6P8AI2yJAE+iyQB9l6MAIUZZACRWcgB7lKQANZfhAD2f6wA7nOQAP5/kAHaR
        qgBYn/UAVpvzAFuX5QBWlvEAWJDjAFqU5AAvatMAVYjgAFeK4QBSgeAAVITfAFSB2QBPgusAUX3dAGd+
        rgBNddoATnbbAE542wBUfdwATHPZAGd5qQB5gpoAUXPZADtf2QBCZeUARmbdAEho1gBAYOQAR2PbAEdm
        2wBjcagAPVjhAERe2QBFX9kATGXUABMWIwBCV9cAQ1jXADhN5gAUFiMAPUvaACoxsABfZKkANDeqADIy
        qAAyNKgAMzSpADMzqAA0NaoAFxceAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAUl9cYEtISElJSUhKYFpfVFkNCRQXIhocHRsZGBUIDl5XD9YgLTQ3PD07NTEkyAtbTQTOBzA4
        QENEQj4yJcwLW1YBy88vOkFFKB8mIxYKElBW1MTDLjY/J0ZqaWNrhJpkVtPAuSszOR5obnZ3c22DZlbQ
        vbMpKiwhR3SPk5F+hmVW0L6wpJyfupt5kpiBf4hlVtDCrqilprGhepSZl4CJZVbVwbKpp6q3o3iQlpV7
        h2VW08a0r62su6J1jI6NfYVlVgLJv7i2tcegbHBycW+CZ1YAzcnFxsbKvKuefIuKnWJPBgDR09PT0gMF
        DBMRERBdUU5WVlZWVlZWTFVYWFhhUwAACPoAAOEPAAA9QAAASkkAAEtHAAA6MQAA/QsAAG0BAAAI+AAA
        0g0AADxAAABKSQAAJyYAADciAAAUFgAAbQE=
</value>
  </data>
</root>